services:
  app:
    build: .
    container_name: edx
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: "5432"
      DATABASE_NAME: edx
      DATABASE_USER: postgres
      DATABASE_PASSWORD: eduroam
    networks:
      - proxy
      - internal
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.edx.rule=Host(`edx.edouard.lol`) || Host(`www.edx.edouard.lol`)
      - traefik.http.routers.edx.entrypoints=websecure
      - traefik.http.routers.edx.tls.certresolver=le
      - traefik.http.services.edx.loadbalancer.server.port=80
  db:
    image: postgres:16-alpine
    container_name: edx-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: edx
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: eduroam
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d:ro
    networks:
      - internal

networks:
  proxy:
    external: true
  internal:
    driver: bridge

volumes:
  postgres-data:
